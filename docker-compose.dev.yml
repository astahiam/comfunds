version: '3.8'

services:
  # PostgreSQL Database (Development)
  postgres-dev:
    image: postgres:15-alpine
    container_name: comfunds_postgres_dev
    environment:
      POSTGRES_DB: comfunds_dev
      POSTGRES_USER: comfunds_user
      POSTGRES_PASSWORD: comfunds_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U comfunds_user -d comfunds_dev"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - comfunds_dev_network

  # Go API Backend (Development with hot reload)
  backend-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: comfunds_backend_dev
    environment:
      DATABASE_URL: postgres://comfunds_user:comfunds_password@postgres-dev:5432/comfunds_dev?sslmode=disable
      PORT: 8080
      ENVIRONMENT: development
      JWT_SECRET: dev-jwt-secret-key
    ports:
      - "8081:8080"
    volumes:
      - .:/app
      - go_cache:/go
    depends_on:
      postgres-dev:
        condition: service_healthy
    networks:
      - comfunds_dev_network
    command: ["air", "-c", ".air.toml"]



  # Redis for development
  redis-dev:
    image: redis:7-alpine
    container_name: comfunds_redis_dev
    ports:
      - "6380:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - comfunds_dev_network

  # Adminer for database management
  adminer:
    image: adminer:latest
    container_name: comfunds_adminer
    ports:
      - "8082:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres-dev
    depends_on:
      - postgres-dev
    networks:
      - comfunds_dev_network

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  go_cache:
    driver: local


networks:
  comfunds_dev_network:
    driver: bridge
